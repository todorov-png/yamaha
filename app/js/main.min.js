'use strict';

const header = document.querySelector(".header"),
      burgerMenu = header.querySelector(".menu-burger__header"),
      headerNav = header.querySelector(".header__nav"),
      headerItem = header.querySelectorAll(".header__item");

if (header !== null) {
  headerRendering();

  //При изменении ширины окна перерисовываем шапку
  window.addEventListener('resize', function(event){
    headerRendering();
  });
  
  burgerMenu.onclick = () => {
    burgerMenu.classList.toggle("open-menu");
    headerNav.classList.toggle("open-menu");
  };
}

//Меняем кнопки в шапке если есть авторизация пользователя
const userData = JSON.parse(localStorage.getItem('data_user'));

if(userData !== null) {
  updataUserData();
} else {
  //Скрываем корзину до авторизации
  const basketLink = header.querySelector(".header__item-basket");

  if(basketLink !== null) {
    basketLink.style.display="none";
  }
}

//При обновлении данных в localStorage обновляем шапки сайта
window.addEventListener('storage', () => {
  updataUserData();
});

//Выравниваем эмблему по центру
function headerRendering() {
  if (header.offsetWidth > 960) {
    headerItem[0].style.width = headerItem[2].offsetWidth + 'px';
  } else {
    headerItem[0].style.width = 'auto';
  }
  headerNav.style.top = header.offsetHeight + 'px';
}

//Функция обновления данных если пользователь авторизовался
function updataUserData() {
  const accountLoginLink = header.querySelectorAll(".account-login"),
        registrationLink = header.querySelectorAll(".registration"),
        basketLink = header.querySelector(".header__item-basket");

  //Скрываем все кнопки входа
  if(accountLoginLink !== null) {
    accountLoginLink.forEach((elem)=>{
      elem.style.display="none";
    });
  }

  //Изменяем все кнопки регистрации на Мой аккаунт
  if(registrationLink !== null) {
    registrationLink.forEach((elem)=>{
      elem.textContent ="Мой аккаунт";
      elem.setAttribute("href", 'http://yamahashop.zzz.com.ua/page/my_account.html');
    });
  }

  //Проверяем есть ли что в корзине и обновляем счетчик
  const basketData = JSON.parse(localStorage.getItem('data_basket')),
        counterBasketText = document.querySelector(".counter-basket-text");
  if(basketData !== null) {
    //Считаем товары и изменяем счетчик корзины
    let i = 0;
    basketData.tool.forEach(() => {
      i++;
    });
    counterBasketText.textContent = i;  
  }
}


'use strict';

//Плавное исчезновение уведомления
function callPopUp(text) {
  const divPopUp = document.createElement( "div" ),
      blockText = document.createElement( "p" ),
      body = document.querySelector('body'),
      oldDivPopUp = document.querySelector('.pop-up-notification');

  if (oldDivPopUp !== null) {
    oldDivPopUp.remove();
  }
  
  divPopUp.classList.add('pop-up-notification');
  blockText.classList.add('pop-up-notification__text');
  blockText.textContent = text;
  blockText.zIndex = 100000;
  divPopUp.append(blockText);
  body.insertAdjacentElement('afterBegin', divPopUp);
  smoothTransparencyChange(divPopUp, 1500, 50);
}

function smoothTransparencyChange(block, timeStart, timeInterval) {
  let op = 1;
  setTimeout(()=>{
    setTimeout(function func() {
      if (op < 0) {
        block.remove();
        return;
      }
      block.style.opacity = op;
      op -= 0.05;
      setTimeout (func, timeInterval);
    }, timeInterval); 
  }, timeStart);
}
'use strict';

//Появление формы при наведении на блок "Поиграть на инструменте"
const tool = document.querySelectorAll(".tool-description__row"),
      hoverBtnTesting = document.querySelector(".registration-for-testing__text"),
      formTesting = document.querySelector(".registration-for-testing__form-wrapper");

function showFormTests() {
  formTesting.style.display = "flex";
	formTesting.style.opacity = 1;
	if (tool[2].offsetWidth > 480) {
		formTesting.style.height = tool[2].offsetHeight + 1 + 'px';
	} else {
		formTesting.style.height = tool[1].offsetHeight + tool[2].offsetHeight + 1 + 'px';
	}
}

if (hoverBtnTesting !== null) {
	hoverBtnTesting.addEventListener('mouseover', showFormTests);
	hoverBtnTesting.addEventListener('touchstart', showFormTests);
	window.addEventListener('resize', showFormTests);
	//hoverBtnTesting.addEventListener('touchenter', showFormTests);
}


//Получение данных с формы регистрации без перезагрузки JS formData
document.addEventListener('DOMContentLoaded', function(){
  const form = document.querySelector(".registration-for-testing__form");
	if (form !== null) {
		form.addEventListener('submit', (e)=> {
			const request = new XMLHttpRequest(),
						formData = new FormData(form);
			e.preventDefault();
			callPopUp('Записываю вашу заявку, подождите!');
			request.open('POST', '../php/mail.php');
			request.send(formData);
			request.addEventListener('load', () => {
				if (request.status === 200) {
					callPopUp('Ваша заявка принята, ожидайте звонка!');
					form.reset();
					let op = 1;
					setTimeout(()=>{
						setTimeout(function func() {
							if (op < 0) {
								formTesting.style.display = 'none';
								return;
							}
							formTesting.style.opacity = op;
							op -= 0.05;
							setTimeout (func, 50);
						}, 50); 
					}, 1000);
				} else {
					callPopUp('Произошла ошибка, попробуйте еще!');
				}
			});
		});
	}
});
'use strict';

//Получение данных с формы регистрации без перезагрузки JS formData
document.addEventListener('DOMContentLoaded', function(){
  const form = document.querySelector(".form-reg-speed__form");
  if (form !== null) {
    form.addEventListener('submit', (e)=> {
      e.preventDefault();
      const request = new XMLHttpRequest(),
            formData = new FormData(form);
      callPopUp('Проверяю данные, подождите!');
      request.open('POST', '../php/registration_form.php');
      request.send(formData);
      request.addEventListener('load', () => {
        if (request.status === 200) {
          if (JSON.parse(request.response)) {
            callPopUp('Регистрация прошла успешно!');
            form.reset();
            localStorage.setItem('data_user', request.response);
            setTimeout(function() {
              document.location.href = "http://yamahashop.zzz.com.ua/";
            }, 1000);
          } else {
            callPopUp('Пользователь с таким email уже зарегистрирован, перейдите на страницу входа!');
          }
        } else {
          callPopUp('Произошла ошибка, попробуйте еще!');
        }
      });
    });
  }
});
'use strict';
//Получение данных с формы регистрации без перезагрузки JS formData
document.addEventListener('DOMContentLoaded', function(){
  const form = document.querySelector(".form-authorization__form");
  if (form !== null) {
    form.addEventListener('submit', (e)=> {
      e.preventDefault();
      const request = new XMLHttpRequest(),
            formData = new FormData(form);
      callPopUp('Проверяю данные, подождите!');
      request.open('POST', '../php/account_form.php');
      request.send(formData);
      request.addEventListener('load', () => {
        if (request.status === 200) {
          const answer = JSON.parse(request.response);
          if (answer) {
            if (answer.password_status) {
              callPopUp('Авторизация прошла успешно!');
              form.reset();
              localStorage.setItem('data_user', request.response);
              setTimeout(function() {
                document.location.href = "http://yamahashop.zzz.com.ua/";
              }, 1000); 
            } else {
              callPopUp('Введён неверный пароль!');
            }
          } else {
            callPopUp('Пользователь с таким email не найден!');
          }
        } else {
          callPopUp('Произошла ошибка, попробуйте еще!');
        }
      });
    });
  }
});
'use strict';

//Появление надписи при наведении на блок с инструментом
const instruments = document.querySelectorAll(".instruments-item");

if(instruments !== null) {
  instruments.forEach((elem)=>{
    //Появление надписи купить на блоке при наведении
    elem.addEventListener('mouseover', ()=> {
      elem.querySelector(".instruments-item__hover-text").style.display="block";
    });

    //Убираем надпись купить, если курсор ушел с блока
    elem.addEventListener('mouseout', ()=> {
      elem.querySelector(".instruments-item__hover-text").style.display="none";
    });

    //Добавляем товар в корзину, если кликнули
    elem.addEventListener('click', ()=> {
      const user = JSON.parse(localStorage.getItem('data_user')),
            counterBasketText = document.querySelector(".counter-basket-text");

      if(user !== null) {
        let basket = JSON.parse(localStorage.getItem('data_basket')),
            attribute = elem.getAttribute("data-id");

        if(basket === null) {
          //Если корзина пуста, то сохраняем данные
          basket = {
            tool : [{
              id: attribute,
              name: elem.querySelector("h4").textContent,
              price: parseInt(elem.querySelector("p").textContent),
              counter: 1
            }]
          };
          localStorage.setItem('data_basket', JSON.stringify(basket));
          counterBasketText.textContent = parseInt(counterBasketText.textContent) + 1;
          callPopUp('Товар добавлен в корзину!');
        } else {
          let i = 0;
          basket.tool.forEach(obj => {
            if(obj.id === attribute) {
              i++;
            }
          });

          if(i === 0) {
            basket.tool.push({
              id: attribute,
              name: elem.querySelector("h4").textContent,
              price: parseInt(elem.querySelector("p").textContent),
              counter: 1
            });
            localStorage.setItem('data_basket', JSON.stringify(basket));
            counterBasketText.textContent = parseInt(counterBasketText.textContent) + 1;
            callPopUp('Товар добавлен в корзину!');
          } else {
            callPopUp('Вы уже добавили этот товар в корзину!');
          }
        }
      } else {
        callPopUp('Для добавления в корзину необходимо авторизоваться!');
      }
    });
  });
}


//При изменении ширины окна работаем с блоками
/*window.addEventListener('resize', function(event){
  instruments.forEach((elem)=>{
    elem.addEventListener('mouseover', ()=> {
      elem.querySelector(".instruments-item__hover-text").style.display="block";
    });

    elem.addEventListener('mouseout', ()=> {
      elem.querySelector(".instruments-item__hover-text").style.display="none";
    });
    /* elem.addEventListener('touchstart', ()=> {
      elem.querySelector(".instruments-item__hover-text").style.display="block";
    }); 
  
    /* elem.addEventListener('touchend', ()=> {
      elem.querySelector(".instruments-item__hover-text").style.display="none";
    }); 
  
    /* elem.addEventListener('mousedown', ()=> {
      alert('нажали купить');
    }); 
  });
});*/

'use strict';

//localStorage.setItem('data_user', JSON.stringify({'email':'zhe...'})); //задание переменной
//JSON.parse(localStorage.getItem('data_user')); //получение переменной
//localStorage.clear(); //очистка всех данных
//localStorage.removeItem('data_user'); //Удаление ключа

/* window.addEventListener('storage', event => {
  console.log(event);
}); */ //Вызывается когда в сторедж что-то записывается но в другой вкладке, можно перезагрузить страницы если оно случилось

